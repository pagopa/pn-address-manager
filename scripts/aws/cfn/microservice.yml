AWSTemplateFormatVersion: 2010-09-09
Description: 'Example microservice deploy'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: Is the base URL of the load balancer where the service is going to be reachable.
  
  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Kinesis stream that receive logs'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  EcsLogGroup:
    Type: String

  # Heath Check parameters
  HealthCheckInterval:
    Description: Seconds between two health check
    Type: Number
    Default: 60

  HealthCheckTimeout:
    Description: health check timeout seconds
    Type: Number
    Default: 5

  HealthyThresholdCount:
    Description: |
      The number of consecutive health checks successes required before considering 
      an unhealthy target healthy.
    Type: Number
    Default: 5

  HealthCheckPath:
    Description: It is used to specify the endpoint path for health checks and determines the path where health checks are performed.
    Type: String
    Default: '/actuator/health'

  UnhealthyThresholdCount:
    Description: |
      The number of consecutive health check failures required before considering a target unhealthy.
    Type: Number
    Default: 2

  # Instance parameters
  # 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB
  # 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB
  # 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB
  # 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments
  # 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments
  CpuValue:
    Type: Number
    Default: 1024
    Description: Fargate virtual CPU quantity 1024 equals one vCPU

  # 0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)
  # 1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)
  # 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)
  # Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)
  # Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)
  MemoryAmount:
    Type: String
    Default: 2GB
    Description: memory amount reserved to the task pod.
    AllowedValues: [ 2GB, 4GB, 6GB, 8GB ]

  # Autoscaling parameters
  AutoscalingCheckPeriod:
    Default: 60
    Type: Number
    Description: minimum autoscaling number of tasks\

  AutoscalingDataPointN:
    Default: 1
    Type: Number
    Description: activate when N datapoint on M

  AutoscalingDataPointM:
    Default: 1
    Type: Number
    Description: activate when N datapoint on M

  AutoscalingThreshold:
    Default: 70
    Type: String

  MinTasksNumber:
    Default: 1
    Type: Number
    Description: minimum autoscaling number of tasks

  MaxTasksNumber:
    Default: 1
    Type: Number
    Description: maximum autoscaling number of tasks

  AddressManagerEventBusArn:
    Type: String
    Description: ARN of the address manager event bus

  AddressManagerEventBusName:
    Type: String
    Description: Name of the address manager event bus

  PnCoreTargetEventBus:
    Type: String
    Description: ARN of the core target event bus

  AddressManagerEventBusDLQArn:
    Type: String
    Description: ARN of the address manager event bus DLQ

  AddressManagerEventBusDLQName:
    Type: String
    Description: Name of the address manager event bus DLQ

  AddressManagerEventBusDLQUrl:
    Type: String
    Description: URL of the address manager event bus DLQ

  flagCsv:
    Default: true
    Type: String
    Description: It Determines the behavior during the normalization or deduplication process. When set to "true," it triggers a search for the address within a CSV file. Otherwise, when set to "false," it calls the Postel service, passing the address to it for processing.

  enableWhitelisting:
    Default: true
    Type: String
    Description: It acts as a flag to control the verification of a whitelist in the application's output. When this parameter is set to "true," the application will check if certain conditions are met in the output data.

  LogAlarmStrategy:
    Type: String
    Default: 'FATAL'

  CountriesCsv:
    Type: String
    Description: It is the file path for a CSV file containing country data and is used in the code snippet to read the file.

  CapCsv:
    Type: String
    Description: It is the file path for a CSV file containing CAP data and is used in the code snippet to read the file.

  EnablePatternValidation:
    Type: String
    Default: true
    Description: It determines whether address pattern validation is enabled or not.
    AllowedValues: [true, false]

  PhysicalAddressValidationCharsValue:
    Type: String
    Description: It defines the allowable characters for validating physical addresses.
    Default: "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ./ '-"

  PnAddressManagerInputsQueueName:
    Type: String
    Description: It specifies the name of the queue for handling inputs.

  PnAddressManagerInputsQueueARN:
    Type: String
    Description: 'ARN for NationalRegistryGatewayInputs'

  PnAddressManagerInputsDLQName:
    Type: String
    Description: It specifies DLQ for handling inputs.

  PnAddressManagerInputsDLQARN:
    Type: String
    Description: 'DLQ ARN for PnAddressManagerInputs'

  BatchRequestTableArn:
    Type: String
    Description: 'ARN of DynamoDB table BatchRequest'

  PostelBatchTableArn:
    Type: String
    Description: 'ARN of DynamoDB table PostelBatch'

  CountryTableArn:
    Type: String
    Description: 'ARN of DynamoDB table addressManagerCountry'

  CapTableArn:
    Type: String
    Description: 'ARN of DynamoDB table AddressManagerCap'

  ApiKeyTableArn:
    Type: String
    Description: 'ARN of DynamoDB table AddressManagerApiKey'

  BatchRequestTableName:
    Type: String
    Description: It specifies the name of the DynamoDB table used for storing information related to batch requests.

  PostelBatchTableName:
    Type: String
    Description: It specifies the name of the DynamoDB table used for storing information related to Postel batches.

  CountryTableName:
    Type: String
    Description: It specifies the name of the DynamoDB table used for storing country-related information.

  CapTableName:
    Type: String
    Description: It specifies the name of the DynamoDB table used for storing cap-related information.

  ApiKeyTableName:
    Type: String
    Description: It specifies the name of the DynamoDB table used for storing and managing API keys.

  PnAddressManagerNormalizerBatchRequestTtl:
    Type: Number
    Description: It specifies the period after which the requests expire and should no longer be processed, providing a maximum time limit for their completion.
    Default: 1209600

  PnAddressManagerNormalizerBatchRequestDelay:
    Type: Number
    Description: It defines delay controls the interval at which the application checks for new batch requests to be processed.
    Default: 60000

  PnAddressManagerNormalizerBatchRequestRecoveryDelay:
    Type: Number
    Description: It represents the delay time for Postel batch request recovery in the address normalization.
    Default: 30000

  PnAddressManagerNormalizerPostelRecoveryDelay:
    Type: Number
    Description: It represents the delay time for Postel batch request recovery in the address normalization.
    Default: 30000

  PnAddressManagerNormalizerPostelRecoveryAfter:
    Type: Number
    Description: It specifies the duration that must pass before initiating the recovery of Postel Activation batches.
    Default: 3600

  PnAddressManagerNormalizerPostelMaxRetry:
    Type: Number
    Description: It represents the maximum number of retry attempts allowed for Postel Activation requests.
    Default: 3

  PnAddressManagerNormalizerBatchRequestRecoveryAfter:
    Type: Number
    Description: It represents the time interval after which Postel batch request recovery occurs in the address normalization.
    Default: 3600

  PnAddressManagerNormalizerBatchRequestMaxRetry:
    Type: Number
    Description: It represents the maximum number of retries allowed for Postel batch requests.
    Default: 3

  PnAddressManagerNormalizerBatchRequestMaxSize:
    Type: Number
    Description: It specifies the maximum number of batched address requests that can be processed in a single batch.
    Default: 100

  PnAddressManagerNormalizerEventBridgeRecoveryDelay:
    Type: Number
    Description: It is used to define the recovery delay for the EventBridge in the Normalizer.
    Default: 30000

  PostelCxId:
    Type: String
    Description: It is used to specify the "CxId" when making requests to the Postel service.

  NormalizerRequestPrefix:
    Type: String
    Description: It represents a prefix used for generating Postel request IDs.
    Default: ''

  PnAddressManagerCxId:
    Type: String
    Description: It specifies the cxId to pass in the Header.

  NormalizzatoreBasePath:
    Type: String
    Description: It defines the base URL for the Postel Normalizzatore.

  DeduplicaBasePath:
    Type: String
    Description: It defines the base URL for the Postel Deduplica.

  PnAddressManagerNormalizerBatchRequestLockAtMost:
    Type: String
    Description: It specifies how long the lock should be kept in case the executing node dies.
    Default: '120000'

  PnAddressManagerNormalizerBatchRequestLockAtLeast:
    Type: String
    Description: It specifies minimum amount of time for which the lock should be kept.
    Default: '1000'

  PnAddressManagerNormalizerBatchRecoveryLockAtMost:
    Type: String
    Description: It represents the maximum period for which a lock should be maintained during the batch request recovery process in the address normalization.
    Default: '120000'

  PnAddressManagerBatchCleanRequestDelay:
    Type: Number
    Description: It determines the delay before executing a batch process to reprocess requests that were previously stopped.
    Default: 30000

  PnAddressManagerNormalizerPostelWorkingTtl:
    Type: Number
    Description: It defines TTL duration in seconds for Postel working batches in the normalizer component of the application. When a Postel batch is marked as "WORKING," it remains in this state for the duration specified by the TTL. After the TTL period has elapsed, the batch is considered expired and should no longer be processed.
    Default: 1209600

  PnAddressManagerNormalizerPostelTtl:
    Type: Number
    Description: It defines TTL duration in seconds for Postel batches in the normalizer component of the application. When a Postel batch is created, it is associated with this TTL, which determines the maximum amount of time the batch is allowed to exist and be processed.
    Default: 1209600

  ShedLockTableName:
    Type: String
    Description: It specifies the name of the DynamoDB table used for implementing distributed locks.

  ShedLockTableArn:
    Type: String
    Description: 'ARN of DynamoDB table PnAddressManagerShedLock'

  PnAddressManagerMaxCsvSize:
    Type: Number
    Description: It is used to specify the maximum number of entries allowed in a CSV file.
    Default: 50000


Resources:

  # PN-address-manager microservice
  AddressManagerMicroservice:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/ecs-service.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-address-manager'
        CpuValue: !Ref CpuValue
        MemoryAmount: !Ref MemoryAmount
        HealthCheckTimeout: !Ref HealthCheckTimeout
        HealthCheckInterval: !Ref HealthCheckInterval
        HealthyThresholdCount: !Ref HealthyThresholdCount
        HealthCheckPath: !Ref HealthCheckPath
        UnhealthyThresholdCount: !Ref UnhealthyThresholdCount
        AutoscalingStrategy: REST-API
        AutoscalingThreshold: !Ref AutoscalingThreshold
        AutoscalingCheckPeriod: !Ref AutoscalingCheckPeriod
        MinTasksNumber: !Ref MinTasksNumber
        MaxTasksNumber: !Ref MaxTasksNumber
        AutoscalingDataPointN: !Ref AutoscalingDataPointN
        AutoscalingDataPointM: !Ref AutoscalingDataPointM
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        ContainerImageURI: !Sub '${ContainerImageUri}'
        ContainerEnvEntry1: !Sub 'AWS_REGION=${AWS::Region}'
        ContainerEnvEntry2: !Sub 'PN_ADDRESSMANAGER_EVENTBUS=${AddressManagerEventBusName}'
        ContainerEnvEntry3: !Sub 'PN_ADDRESSMANAGER_FLAGCSV=${flagCsv}'
        ContainerEnvEntry4: !Sub 'PN_ADDRESSMANAGER_HEALTHCHECKPATH=${HealthCheckPath}'
        ContainerEnvEntry5: !Sub 'PN_ADDRESSMANAGER_COUNTRIESCSV=${CountriesCsv}'
        ContainerEnvEntry6: !Sub 'PN_ADDRESSMANAGER_CAPCSV=${CapCsv}'
        ContainerEnvEntry7: !Sub 'PN_ADDRESSMANAGER_ENABLEPATTERNVALIDATION=${EnablePatternValidation}'
        ContainerEnvEntry8: !Sub 'PN_ADDRESSMANAGER_VALIDATIONPATTERN=${PhysicalAddressValidationCharsValue}'
        ContainerEnvEntry9: !Sub 'PN_ADDRESSMANAGER_TOPICS_GATEWAYEVENTS=${PnAddressManagerInputsQueueName}'
        ContainerEnvEntry10: !Sub 'PN_ADDRESSMANAGER_SQS_INPUTQUEUENAME=${PnAddressManagerInputsQueueName}'
        ContainerEnvEntry11: !Sub 'PN_ADDRESSMANAGER_SQS_INPUTDLQQUEUENAME=${PnAddressManagerInputsDLQName}'
        ContainerEnvEntry12: !Sub 'PN_ADDRESSMANAGER_NORMALIZZATOREBASEPATH=${NormalizzatoreBasePath}'
        ContainerEnvEntry13: !Sub 'PN_ADDRESSMANAGER_DEDUPLICABASEPATH=${DeduplicaBasePath}'
        ContainerEnvEntry14: !Sub 'PN_ADDRESSMANAGER_SAFESTORAGEBASEPATH=http://${ApplicationLoadBalancerDomain}:8080'
        ContainerEnvEntry15: !Sub 'PN_ADDRESSMANAGER_DAO_APIKEYTABLENAME=${ApiKeyTableName}'
        ContainerEnvEntry16: !Sub 'PN_ADDRESSMANAGER_DAO_CAPTABLENAME=${CapTableName}'
        ContainerEnvEntry17: !Sub 'PN_ADDRESSMANAGER_DAO_COUNTRYTABLENAME=${CountryTableName}'
        ContainerEnvEntry18: !Sub 'PN_ADDRESSMANAGER_DAO_POSTELBATCHTABLENAME=${PostelBatchTableName}'
        ContainerEnvEntry19: !Sub 'PN_ADDRESSMANAGER_DAO_BATCHREQUESTTABLENAME=${BatchRequestTableName}'
        ContainerEnvEntry20: !Sub 'PN_ADDRESSMANAGER_DAO_SHEDLOCKTABLENAME=${ShedLockTableName}'
        ContainerEnvEntry21: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_BATCHREQUEST_TTL=${PnAddressManagerNormalizerBatchRequestTtl}'
        ContainerEnvEntry22: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_BATCHREQUEST_DELAY=${PnAddressManagerNormalizerBatchRequestDelay}'
        ContainerEnvEntry23: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_BATCHREQUEST_LOCKATMOST=${PnAddressManagerNormalizerBatchRequestLockAtMost}'
        ContainerEnvEntry24: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_BATCHREQUEST_LOCKATLEAST=${PnAddressManagerNormalizerBatchRequestLockAtLeast}'
        ContainerEnvEntry25: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_BATCHRECOVERY_LOCKATMOST=${PnAddressManagerNormalizerBatchRecoveryLockAtMost}'
        ContainerEnvEntry26: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_BATCHREQUEST_RECOVERYDELAY=${PnAddressManagerNormalizerBatchRequestRecoveryDelay}'
        ContainerEnvEntry27: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_BATCHREQUEST_RECOVERYAFTER=${PnAddressManagerNormalizerBatchRequestRecoveryAfter}'
        ContainerEnvEntry28: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_BATCHREQUEST_MAXRETRY=${PnAddressManagerNormalizerBatchRequestMaxRetry}'
        ContainerEnvEntry29: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_BATCHREQUEST_QUERYMAXSIZE=${PnAddressManagerNormalizerBatchRequestMaxSize}'
        ContainerEnvEntry30: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_BATCHREQUEST_EVENTBRIDGERECOVERYDELAY=${PnAddressManagerNormalizerEventBridgeRecoveryDelay}'
        ContainerEnvEntry31: !Sub 'PN_ADDRESSMANAGER_POSTELCXID=${PostelCxId}'
        ContainerEnvEntry32: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_POSTEL_RECOVERYDELAY=${PnAddressManagerNormalizerPostelRecoveryDelay}'
        ContainerEnvEntry33: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_POSTEL_RECOVERYAFTER=${PnAddressManagerNormalizerPostelRecoveryAfter}'
        ContainerEnvEntry34: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_POSTEL_MAXRETRY=${PnAddressManagerNormalizerPostelMaxRetry}'
        ContainerEnvEntry35: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_POSTEL_REQUESTPREFIX=${NormalizerRequestPrefix}'
        ContainerEnvEntry36: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_POSTEL_WORKINGTTL=${PnAddressManagerNormalizerPostelWorkingTtl}'
        ContainerEnvEntry37: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_POSTEL_TTL=${PnAddressManagerNormalizerPostelTtl}'
        ContainerEnvEntry38: !Sub 'PN_ADDRESSMANAGER_PAGOPACXID=${PnAddressManagerCxId}'
        ContainerEnvEntry39: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_BATCHCLEANREQUESTDELAY=${PnAddressManagerBatchCleanRequestDelay}'
        ContainerEnvEntry40: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_MAXCSVSIZE=${PnAddressManagerMaxCsvSize}'
        ContainerEnvEntry41: !Sub 'PN_ADDRESSMANAGER_ENABLEWHITELISTING=${enableWhitelisting}'
        ContainerSecret1: !Sub 'PN_ADDRESSMANAGER_NORMALIZER_POSTELAUTHKEY=arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:pn-AddressManager-Secrets:PostelApiKey:AWSCURRENT:'
        ContainerSecret2: !Sub 'PN_ADDRESSMANAGER_APIKEY=arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:pn-AddressManager-Secrets:SafeStorageApiKey:AWSCURRENT:'
        MicroServiceSecretPrefix: pn-AddressManager-Secrets

        MappedPaths: '/address-private/*, /normalizzatore-ingress/*'
        ECSClusterName: !Ref ECSClusterName
        Subnets: !Ref SubnetsIds
        VpcId: !Ref VpcId
        EcsDefaultSecurityGroup: !Ref EcsDefaultSecurityGroup
        LoadBalancerListenerArn: !Ref ApplicationLoadBalancerListenerArn
        LoadbalancerRulePriority: !Ref MicroserviceNumber
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn
        TaskRoleManagedPolicyArn: !Ref AddressManagerMicroserviceTaskManagedPolicy
        EcsLogGroup: !Ref EcsLogGroup
        LogAlarmStrategyV1: !Ref LogAlarmStrategy

  # CloudWatch dashboard
  AddressManagerMicroserviceCloudWatchDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/microservice-cloudwatch-dashboard.yaml"
      Parameters:
        DashboardName: !Sub "${ProjectName}-address-manager"
        AlarmArns: !Join
          - ','
          - - !GetAtt AddressManagerMicroservice.Outputs.FatalLogsMetricAlarmArn
            - !GetAtt DLQHasMessagesAlarm.Arn
        LogGroupsNames: !Join
          - ','
          - - !Ref EcsLogGroup
        EventRuleArns: !Join
          - ','
          - - !GetAtt AddressManagerEventBusToTarget.Arn
        QueueArns: !Join
          - ','
          - - !Ref AddressManagerEventBusDLQArn

  AddressManagerMicroserviceTaskManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - events:PutEvents
            Resource:
              - !Ref AddressManagerEventBusArn
          - Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:GetQueueUrl
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ReceiveMessage
            Resource:
              - !Ref PnAddressManagerInputsDLQARN
              - !Ref PnAddressManagerInputsQueueARN
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:Delete
              - dynamodb:UpdateItem
              - dynamodb:PutItem
            Resource:
              - !Ref CountryTableArn
              - !Ref CapTableArn
              - !Ref ApiKeyTableArn
              - !Ref BatchRequestTableArn
              - !Ref PostelBatchTableArn
              - !Ref ShedLockTableArn
              - !Sub '${BatchRequestTableArn}/index/*'
              - !Sub '${PostelBatchTableArn}/index/*'

  ###################
  ### EventBridge ###
  ###################

  # Dead Letter Queue policy
  EventBusDeadLetterQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref AddressManagerEventBusDLQUrl
      PolicyDocument:
        Statement:
          - Sid: "SendEventsToDLQ"
            Effect: "Allow"
            Principal:
              Service:
                - "events.amazonaws.com"
            Action:
              - "SQS:SendMessage"
            Resource:
              - !Ref AddressManagerEventBusDLQArn

  DLQHasMessagesAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ProjectName}-AddressManagerBus-DLQ-HasMessage'
      AlarmDescription: "CloudWatch alarm for when DLQ has 1 or more messages."
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !Ref AddressManagerEventBusDLQName
      Statistic: "Sum"
      TreatMissingData: "notBreaching"
      Period: 60
      Threshold: 1
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      EvaluationPeriods: 1
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      InsufficientDataActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn

  # Event Bus to target bus role
  AddressManagerEventBusTargetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyName: putEventIntoTargetBus
          PolicyDocument:
            Statement:
              - Sid: putEvents
                Action:
                  - events:PutEvents
                Effect: Allow
                Resource:
                  - !Ref PnCoreTargetEventBus

  # Event Bus rule that direct event to target event bus
  AddressManagerEventBusToTarget:
    Type: AWS::Events::Rule
    Properties:
      Description: Route Address Manager Events to target event bus
      RoleArn: !GetAtt AddressManagerEventBusTargetRole.Arn
      EventBusName: !Ref AddressManagerEventBusName
      EventPattern:
        detail-type: [ "AddressManagerOutcomeEvent" ]
        source: [ "pn-address-manager" ]
      Targets:
        - Id: !Sub '${ProjectName}-AddressManagerBus-PnCoreTargetEventBus'
          Arn: !Ref PnCoreTargetEventBus
          RoleArn: !GetAtt AddressManagerEventBusTargetRole.Arn
          DeadLetterConfig:
            Arn: !Ref AddressManagerEventBusDLQArn
