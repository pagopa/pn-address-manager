package it.pagopa.pn.address.manager.constant;

import java.util.Objects;
public enum PostelError {
        _001(1, "IL CAP NON E' PRESENTE IN INPUT"),
        _002(2, "LA PROVINCIA NON E' PRESENTE IN INPUT"),
        _003(3, "IL CAP IN INPUT RISULTA DIVERSO DAL CAP DELLA LOCALITA"),
        _004(4, "IL CAP IN INPUT RISULTA DIVERSO DAL CAP DELLA VIA"),
        _005(5, "IL CAP IN INPUT RISULTA DIVERSO DAL CAP DELL'ARCO DI CAP DELLA VIA"),
        _006(6, "LA SIGLA PROVINCIA IN INPUT RISULTA DIVERSA DA QUELLA DETERMINATA"),
        _007(7, "IL CAP NON E' PRESENTE NEL RANGE DI CAP CONSENTITI"),
        _008(8, "LA PROVINCIA NON E' PRESENTE SULLA TABELLA PROVINCIE"),
        _009(9, "LA PROVINCIA E IL CAP INDIVIDUANO DUE PROVINCIE DIVERSE"),
        _019(19, "I DATI DI PROVINCE E/O CAP NON SONO VALIDI"),
        _101(101, "LA LOCALITA' NON E' PRESENTE IN INPUT"),
        _102(102, "NON E' STATO TROVATO NESSUN CANDIDATO PER LA LOCALITA"),
        _103(103, "E' STATO TROVATO ALMENO UN CANDIDATO PER QUESTA LOCALITA', MA NESSUNO AVEVA UN PUNTEGGIO TALE DA ESSERE VALIDATO"),
        _104(104, "SONO STATI TROVATI PIU' CANDIDATI VALIDI PER QUESTA LOCALITA"),
        _105(105, "LA LOCALITA CANDIDATA NON E' PUBBLICATA"),
        _106(106, "LA LOCALITA' NON CONGRUENTE CON LO STATO"),
        _107(107, "LOCALITA' NON TROVATA NELLA PROVINCIA"),
        _108(108, "LISTA DI LOCALITA' AMBIGUE TRONCATA"),
        _109(109, "I DATI DELLE LOCALITA' NON SONO VALIDI"),
        _201(201, "LA FRAZIONE NON E' PRESENTE IN INPUT"),
        _202(202, "NON E' STATO TROVATO NESSUN CANDIDATO PER LA FRAZIONE"),
        _203(203, "E' STATO TROVATO ALMENO UN CANDIDATO PER QUESTA FRAZIONE, MA NESSUNO AVEVA UN PUNTEGGIO TALE DA ESSERE VALIDATO"),
        _204(204, "SONO STATI TROVATI PIU' CANDIDATI VALIDI PER QUESTA FRAZIONE"),
        _301(301, "LA LOCALITA E LA FRAZIONE INDIVIDUANO DUE COMUNI DIVERSI"),
        _302(302, "LOCALITA' E FRAZIONE INDICANO FRAZIONI DIVERSE"),
        _303(303, "LA FRAZIONE NON E' CONGRUENTE CON LA VIA"),
        _401(401, "LA DUG NON E' PRESENTE IN INPUT"),
        _402(402, "NON E' STATA TROVATA NESSUN CANDIDATO PER LA DUG"),
        _404(404, "SONO STATI TROVATI PIU' CANDIDATI VALIDI PER QUESTA DUG"),
        _409(409, "I DATI DELLE DUG E COMPLEMENTI A DUG NON SONO VALIDI"),
        _421(421, "LA VIA NON E' PRESENTE IN INPUT"),
        _422(422, "NON E' STATA TROVATA NESSUN CANDIDATO PER LA VIA"),
        _423(423, "E' STATO TROVATO ALMENO UN CANDIDATO PER QUESTA VIA, MA NESSUNO AVEVA UN PUNTEGGIO TALE DA ESSERE VALIDATA"),
        _424(424, "SONO STATI TROVATI PIU' CANDIDATI VALIDI PER QUESTA VIA"),
        _425(425, "SONO STATE TROVATE IN INPUT ALMENO DUE VIRGOLE"),
        _426(426, "LA DUG IN INPUT E QUELLA DEL CANDIDATO HANNO DIVERSA MACRODUG"),
        _427(427, "LA VIA CANDIDATA NON E' PUBBLICATA"),
        _429(429, "I DATI DELLE VIE NON SONO VALIDI"),
        _430(430, "LA VIA IN INPUT CORRISPONDE ESATTAMENTE AD UNA FRAZIONE"),
        _441(441, "VIA, CAP, CIV INCONGRUENTI, SOLO SULLE VIE MULTICAP: NON E' STATO TROVATO IL CIVICO SULL'ARCO DI CAP DELLA VIA"),
        _442(442, "IL CAMP TROVATO SULLA VIA DI UNA LOCALITA' E' INCONGRUENTE CON IL CAP DELLA LOCALITA' TROVATA"),
        _443(443, "LA VIA NON E' UNIVOCA E ALMENO UNA HA CAP E CIVICO INCONGRUENTI"),
        _449(449, "I DATI DEGLI ARCHI NON SONO VALIDI"),
        _451(451, "CASELLA POSTALE CON CAP GENERICO"),
        _452(452, "LA VIA E' UNA CLAUSOLA DI PRESSO"),
        _459(459, "INDIRZZO CON CASELLA POSTALE NON VALIDO"),
        _601(601, "NON E' STATO TROVATO NESSUN CANDIDATO PER LO STATO"),
        _609(609, "I DATI DEGLI STATI ESTERI NON SONO VALIDI"),
        _901(901, "ERRORE INTERNO NON CLASSIFICABILE"),
        _997(997, "ERRORE NEL SERVIZIO DI NORMALIZZAZIONE"),
        _998(998, "ERRORE FORMATTAZIONE DATI"),
        _999(999, "CARATTERI NON ASCII PRESENTI NELL'INDIRIZZO"),
        _000(000,"ERRORE GENERICO");
        private final Integer code;
        private final String description;

        PostelError (Integer code, String description) {
                this.code = code;
                this.description = description;
        }
        public Integer getCode () {
                return code;
        }
        public static PostelError fromCode(Integer value) {
                for (PostelError b : PostelError.values()) {
                        if (Objects.equals(b.getCode(), value)) {
                                return b;
                        }
                }
                throw new IllegalArgumentException("Unexpected code '" + value + "'");
        }
        public String getDescription () {
                return description;
        }
}