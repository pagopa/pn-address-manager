logging.config=classpath:logback-base.xml

pn.env.runtime=PROD

spring.application.name=PN-ADDRESS-MANAGER

aws.region=${AWS_REGION:eu-south-1}

pn.address.manager.health-check-path = ${PN_ADDRESS_MANAGER_HEALTH_CHECK_PATH:/actuator/health}

pn.address.manager.eventbus.name = ${PN_ADDRESS_MANAGER_EVENTBUS_NAME:default}
pn.address.manager.eventbus.detail.type = AddressManagerOutcomeEvent
pn.address.manager.eventbus.source = pn-address-manager
pn.address.manager.csv.path.country = ${PN_ADDRESS_MANAGER_COUNTRIES_CSV:PagoPA-Lista-Nazioni.csv}
pn.address.manager.csv.path.cap = ${PN_ADDRESS_MANAGER_CAP_CSV:PagoPA-ListaCLP.csv}

pn.address.manager.flag.csv = ${PN_ADDRESS_MANAGER_FLAG_CSV:false}
pn.address.manager.enable-validation=${PN_ADDRESS_MANAGER_ENABLE_PATTERN_VALIDATION:true}
pn.address.manager.validation-pattern=${PN_ADDRESS_MANAGER_VALIDATION_PATTERN:01234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ./ '-}
pn.address.manager.sqs.input.queue.name=${PN_ADDRESS_MANAGER_SQS_INPUT_QUEUE_NAME:pn-address-manager-inputs}
pn.address.manager.sqs.input.dlq.queue.name=${PN_ADDRESS_MANAGER_SQS_INPUT_DLQ_QUEUE_NAME:address-manager-input-dlq-queue}

pn.address.manager.webclient.pago-pa.tcp-max-poolsize = ${PN_ADDRESS_MANAGER_TCP_MAX_POOLSIZE:100}
pn.address.manager.webclient.pago-pa.tcp-max-queued-connections = ${PN_ADDRESS_MANAGER_TCP_MAX_QUEUED_CONNECTIONS:100}
pn.address.manager.webclient.pago-pa.tcp-pending-acquired-timeout = ${PN_ADDRESS_MANAGER_TCP_PENDING_ACQUIRED_TIMEOUT:10000}
pn.address.manager.webclient.pago-pa.tcp-pool-idle-timeout = ${PN_ADDRESS_MANAGER_TCP_POOL_IDLE_TIMEOUT:10000}
pn.address.manager.webclient.pago-pa.base-path = ${PN_ADDRESS_MANAGER_PAGO_PA_BASE_PATH:https://pagopa.test}

pn.address.manager.batch.ttl = ${PN_ADDRESS_MANAGER_BATCH_TTL:60000}
pn.address.manager.postel.authKey = ${PN_ADDRESS_MANAGER_POSTEL_AUTH_KEY:test}
pn.address.manager.postel.batch.request.max-retry = ${PN_ADDRESS_MANAGER_POSTEL_BATCH_REQUEST_MAX_RETRY:3}
pn.address.manager.postel.batch.request.max-size = ${PN_ADDRESS_MANAGER_POSTEL_BATCH_REQUEST_MAX_SIZE:1000}
pn.address.manager.postel.batch.request.delay = ${PN_ADDRESS_MANAGER_POSTEL_BATCH_REQUEST_DELAY:30000}
pn.address.manager.postel.batch.request.recovery.after = ${PN_ADDRESS_MANAGER_POSTEL_BATCH_REQUEST_RECOVERY_AFTER:60000}
pn.address.manager.postel.batch.secondary.table.max-retry = ${PN_ADDRESS_MANAGER_POSTEL_BATCH_SECONDARY_TABLE_MAX_RETRY:3}
pn.address.manager.postel.batch.secondary.table.recovery.after = ${PN_ADDRESS_MANAGER_POSTEL_BATCH_SECONDARY_TABLE_RECOVERY_AFTER:60000}
pn.address.manager.postel.batch.request.table.max-retry = ${PN_ADDRESS_MANAGER_POSTEL_BATCH_REQUEST_TABLE_MAX_RETRY:3}
pn.address.manager.dynamodb.tablename.apiKey = ${PN_ADDRESS_MANAGER_DYNAMODB_TABLENAME_APIKEY:ApiKey}
pn.address.manager.dynamodb.tablename.cap= ${PN_ADDRESS_MANAGER_DYNAMODB_TABLENAME_CAP:Cap}

# Queue inbound event configuration
spring.cloud.stream.function.routing.enabled=true
spring.cloud.stream.bindings.functionRouter-in-0.destination=pn-address-manager-inputs
spring.cloud.stream.sqs.bindings.functionRouter-in-0.consumer.snsFanout=false
pn.address.manager.event.handler.AM_NORMALIZE_INPUT=pnAddressManagerRequestConsumer

pn.address.manager.postel.batch.request.recovery.delay = ${PN_ADDRESS_MANAGER_POSTEL_BATCH_REQUEST_RECOVERY_DELAY:30000}
