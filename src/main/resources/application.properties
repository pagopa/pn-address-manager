logging.config=classpath:logback-base.xml

pn.env.runtime=PROD

spring.application.name=PN-ADDRESS-MANAGER

aws.region=${AWS_REGION:eu-south-1}

pn.address.manager.health-check-path = ${PN_ADDRESS_MANAGER_HEALTH_CHECK_PATH:/actuator/health}

pn.address.manager.flag.csv = ${PN_ADDRESS_MANAGER_FLAG_CSV:true}
pn.address.manager.flag.whiteList = ${PN_ADDRESS_MANAGER_FLAG_WHITE_LIST:true}
pn.address.manager.eventbus.name = ${PN_ADDRESS_MANAGER_EVENTBUS_NAME:test}
pn.address.manager.eventbus.detail.type = AddressManagerOutcomeEvent
pn.address.manager.eventbus.source = pn-address-manager
pn.address.manager.csv.path.country = PagoPA-Lista-Nazioni.csv
pn.address.manager.csv.path.cap = PagoPA-ListaCAP.csv

pn.address.manager.webclient.pago-pa.base-path = {PN_ADDRESS_MANAGER_PAGO_PA_API_BASE_URL:http://basepath}
pn.address.manager.webclient.pago-pa.tcp-max-poolsize = 16
pn.address.manager.webclient.pago-pa.tcp-max-queued-connections = 32
pn.address.manager.webclient.pago-pa.tcp-pending-acquired-timeout = 45000
pn.address.manager.webclient.pago-pa.tcp-pool-idle-timeout = 30000

pn.address.manager.postel.batch.request.delay=${PN_ADDRESS_MANAGER_POSTEL_BATCH_REQUEST_DELAY:30000}
pn.address.manager.postel.batch.request.recovery.delay=${PN_ADDRESS_MANAGER_POSTEL_BATCH_REQUEST_RECOVERY_DELAY:30000}
pn.address.manager.postel.ttl=${PN_ADDRESS_MANAGER_POSTEL_TTL:#{1209600}}
pn.address.manager.postel.batch.max-retry=${PN_ADDRESS_MANAGER_POSTEL_BATCH_MAX_RETRY:3}
pn.address.manager.postel.authKey=${PN_ADDRESS_MANAGER_POSTEL_AUTH_KEY:test}

pn.address.manager.dynamodb.tablename.apiKey = pn-address-manager-apiKey
pn.address.manager.dynamodb.tablename.cap = pn-address-manager-cap