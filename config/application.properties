logging.config=config/logback-local.xml

# Runtime mode
pn.env.runtime=DEVELOPMENT

server.port=8093

#pn.address-manager.normalizzatore-base-path=https://localhost:8082/SINIHelper
#pn.address-manager.deduplica-base-path=https://localhost:8082/PagoPaDeduplica
pn.address-manager.normalizzatore-base-path=http://localhost:8082
pn.address-manager.deduplica-base-path=http://localhost:8082
pn.address-manager.safe-storage-base-path=http://localhost:8120
pn.address-manager.postel-cx-id=POSTEL
pn.address-manager.address-length-validation=0

# Config NORMALIZZATORE
pn.address-manager.normalizer.batch-request.ttl=604800
pn.address-manager.normalizer.postel.working-ttl=60
pn.address-manager.normalizer.postel.ttl=604800
pn.address-manager.normalizer.postel-auth-key=test
pn.address-manager.normalizer.max-csv-size=10000
#Specifica quanto tempo un determinato nodo può tenere il lock, utile nel caso in cui un nodo vada down
pn.address-manager.normalizer.batch-request.lock-at-most=138000
#Specifica il tempo minimo in cui un nodo tiene il lock. Utile per evitare l'esecuzione multipla di più nodo in caso di task molto brevi
pn.address-manager.normalizer.batch-request.lock-at-least=1000
pn.address-manager.normalizer.batch-recovery.lock-at-most=120000
pn.address-manager.normalizer.batch-recovery.lock-at-least=1000
#Indica il tempo (espresso in millis) che intercorre tra il termine di uno scheduling e l'altro. Nota: se minore di lockAtLeastFor il tempo che passa tra un esecuzione e l'altra sarà necessariamente il tempo indicato per quest'ultimo
pn.address-manager.normalizer.batch-request.delay=138000
pn.address-manager.normalizer.batch-request.recovery-delay=120000
pn.address-manager.normalizer.batch-request.recovery-after=120
pn.address-manager.normalizer.batch-request.max-retry=3
pn.address-manager.normalizer.batch-request.query-max-size=1000
pn.address-manager.normalizer.batch-request.eventbridge-recovery-delay=120000
pn.address-manager.normalizer.postel.recovery-delay=120000
pn.address-manager.normalizer.postel.recovery-after=600
pn.address-manager.normalizer.postel.max-retry=12
pn.address-manager.normalizer.postel.request-prefix=
pn.address-manager.normalizer.batch-clean-request=120000
pn.address-manager.normalizer-postel-read-timeout-millis=30000

# Config tabelle dynamodb
pn.address-manager.dao.api-key-table-name=addressManager-AnagraficaClient
pn.address-manager.dao.cap-table-name=addressManager-Cap
pn.address-manager.dao.country-table-name=addressManager-Country
pn.address-manager.dao.postel-batch-table-name=addressManager-NormalizzatoreBatch
pn.address-manager.dao.batch-request-table-name=addressManager-PNRequest
pn.address-manager.dao.shedlock-table-name=addressManager-ShedLock

# Config code SQS
pn.address-manager.sqs.input-queue-name=local-address-inputs
pn.address-manager.sqs.input-dlq-queue-name=local-address-inputs-DLQ
pn.address-manager.sqs.callback-queue-name=local-address-callback
pn.address-manager.sqs.callback-dlq-queue-name=local-address-callback-DLQ

# Technology activation
pn.middleware.init.kafka=false
pn.middleware.init.aws=true

# AWS specific configurations
aws.bucketName=local-doc-bucket
aws.region-code=us-east-1
aws.profile-name=${PN_AWS_PROFILE_NAME:default}
aws.endpoint-url=http://localhost:4566

# Queue inbound event configuration
spring.cloud.stream.function.routing.enabled=true
spring.cloud.stream.bindings.functionRouter-in-0.destination=local-address-inputs,local-address-callback
spring.cloud.stream.sqs.bindings.functionRouter-in-0.consumer.snsFanout=false
cloud.aws.credentials.profile-name=${PN_AWS_PROFILE_NAME:default}
cloud.aws.region.static= us-east-1
cloud.aws.sqs.endpoint= http://localhost:4566